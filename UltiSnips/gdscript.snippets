snippet va "variable"
var ${1:name}${2/\w+/: /}${2:type}${3/\w+/ = /}${3:value}
endsnippet

snippet co "constant"
const ${1:name}${2/\w+/: /}${2:type}${3/\w+/ = /}${3:value}
endsnippet

snippet en "enum"
enum ${1:OPTIONAL_NAME} {
	${2:NAME}${3/\w+/ = /}${3:value}
}
endsnippet

snippet fu "function"
func ${1:function_name}($2)${3/\w+/ -> /}${3:void}:
	${VISUAL}$0
endsnippet

snippet if "if"
if ${1:expression}:
	${VISUAL}$0
endsnippet

snippet ife "if else"
if ${1:expression}:
	${VISUAL}$2
else
	${0:pass}
endsnippet

snippet el "elif"
elif ${1:expression}:
	${VISUAL}$0
endsnippet

snippet wh "while"
while ${1:expression}:
	${VISUAL}$0
endsnippet

snippet fo "for in"
for ${1:i} in ${2:iterable}:
	${VISUAL}$0
endsnippet

snippet for "for in range"
for ${1:i} in range($2):
	${VISUAL}$0
endsnippet

snippet ma "match"
match ${1:expression}:
	${2:pattern}:
		${3:pass}
	_:
		${4:pass}
endsnippet

snippet cli "inner class"
class ${1:ClassName}${2/\w+/ extends /}${2:BaseClass}:
	func _init($3)${2/\w+/.()/}:
		${4:pass}
endsnippet

snippet sg "setget"
var ${1:name}${2/\w+/: /}${2:type}${3/\w+/ = /}${3:value} setget ${1/.*/$0_set/}, ${1/.*/$0_get/} 
endsnippet

snippet cl "class"
${3/\w+/extends /}${3:BaseClass}${3/\w+/

/}class_name ${1:ClassName}${2/.+/, "res:\/\//}${2:icon.png}${2/.+/"/}

func _init($4)${3/\w+/.()/}:
	${5:pass}
endsnippet

snippet si "signal"
signal ${1:signal_name}${2/\w+/(/}${2:parameters}${2/.+/)/}
endsnippet

snippet lo "load"
const ${1/(.*\/)?([a-zA-Z0-9]+)_?(\.\w*)*\/?/\u$2/g} = load("res://${1:script.gd}")
endsnippet

snippet pl "preload"
const ${1/(.*\/)?([a-zA-Z0-9]+)_?(\.\w*)*\/?/\u$2/g} = preload("res://${1:script.gd}")
endsnippet

snippet node "extends Node"
extends ${1:Node}

func _enter_tree() -> void:
	pass

func _exit_tree() -> void:
	pass

func _input(event : InputEvent) -> void:
	pass

func _unhandled_input(event : InputEvent) -> void:
	pass

func _unhandled_key_input(event : InputEventKey) -> void:
	pass

func _physics_process(delta : float) -> void:
	pass

func _process(delta : float) -> void:
	pass

func _ready() -> void:
	pass
endsnippet
